/* Ignore magic numbers with trailing comments */
console.log(1340); /* explains the magic */
for(let i = 0;i>1341;++i) { /* pulls back the curtain */
}

console.log(-1, 0, 1);
console.log(42.42);
            ~~~~~ [ERROR]
const a = 1337;
const b = {
    a: 1338,
    b: 0,
}
b.b = 1339;
      ~~~~ [ERROR]

console.log(1340);
            ~~~~ [ERROR]
for(let i = 0;i>1341;++i) {
                ~~~~ [ERROR]
}

/* A comment that does no good as far as this rule is concerned */
throw 1342;
      ~~~~ [ERROR]

class A {
    static test = 1337;

    constructor (private a = 1337) {
    }
}

enum Test {
    key = 1337,
}

it('should provide a link to the landing page', () => {
  expect($ctrl.actions[0]).toEqual({ label: 'Landing page', state: 'core-landingPage' });
});

it('should provide a link to the person summary', () => {
  expect($ctrl.actions[1]).toEqual({ label: `Dave's profile`, state: 'hrm-person', params: { personId: '123' } });
});

it('should provide a link to create a new person', () => {
  expect($ctrl.actions[2]).toEqual({ label: 'Create a new person', state: 'hrm-person-details', params: { personId: 'new' } });
                       ~ [ERROR]
});

[ERROR]: 'magic numbers' are not allowed